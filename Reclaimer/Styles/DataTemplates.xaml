<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:s="clr-namespace:Studio.Controls;assembly=Studio"
                    xmlns:su="clr-namespace:Studio.Utilities;assembly=Studio"
                    xmlns:u="clr-namespace:Reclaimer.Utilities"
                    xmlns:m="clr-namespace:Reclaimer.Models">

    <u:CoreTemplateSelector x:Key="coreTemplateSelector" />

    <DataTemplate x:Key="SplitPanelTemplate" DataType="m:SplitPanelModel">
        <ItemsControl ItemsSource="{Binding Items}" ItemTemplateSelector="{StaticResource coreTemplateSelector}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <s:SplitPanel Orientation="{Binding Orientation}" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemContainerStyle>
                <Style>
                    <Setter Property="s:SplitPanel.MinSize" Value="{Binding MinPanelSize}" />
                    <Setter Property="s:SplitPanel.DesiredSize" Value="{Binding PanelSize}" />
                </Style>
            </ItemsControl.ItemContainerStyle>
        </ItemsControl>
    </DataTemplate>

    <DataTemplate x:Key="DocumentPanelTemplate" DataType="m:DocumentPanelModel">
        <s:DocumentContainer ItemsSource="{Binding Children}"
                             Orientation="{Binding Orientation}"
                             DockCommand="{Binding DockCommand}">
            <s:DocumentContainer.ItemContainerStyle>
                <Style TargetType="s:DocumentWell" BasedOn="{StaticResource {x:Type s:DocumentWell}}">
                    <Setter Property="ItemsSource" Value="{Binding Children}" />
                    <Setter Property="s:DockManager.IsActive" Value="{Binding IsActive}" />
                    <Setter Property="SelectedItem" Value="{Binding SelectedItem}" />
                    <Setter Property="OverflowItemSelectedCommand" Value="{Binding SelectItemCommand}" />
                    <Setter Property="OverflowItemClosedCommand" Value="{Binding CloseTabCommand}" />
                    <Setter Property="FloatTabCommand" Value="{Binding FloatTabCommand}" />
                    <Setter Property="DockCommand" Value="{Binding DockCommand}" />
                    <Setter Property="s:SplitPanel.MinSize" Value="{Binding MinPanelSize}" />
                    <Setter Property="s:SplitPanel.DesiredSize" Value="{Binding PanelSize}" />
                    <Setter Property="Background" Value="{DynamicResource TreeView.Background}" />
                    <Setter Property="ContentTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <ContentPresenter Content="{Binding Content}" />
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ItemContainerStyle">
                        <Setter.Value>
                            <Style TargetType="s:TabWellItem" BasedOn="{StaticResource {x:Static s:DocumentWell.DocumentTabStyleKey}}">
                                <Setter Property="CloseCommand" Value="{Binding Parent.CloseTabCommand}" />
                                <Setter Property="TogglePinStatusCommand" Value="{Binding Parent.TogglePinStatusCommand}" />
                                <Setter Property="Header" Value="{Binding Header}" />
                                <Setter Property="s:DockManager.IsPinned" Value="{Binding IsPinned}" />
                                <Setter Property="ItemType" Value="{Binding Usage}" />
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Style>
            </s:DocumentContainer.ItemContainerStyle>
        </s:DocumentContainer>
    </DataTemplate>

    <DataTemplate x:Key="ToolWellTemplate" DataType="m:ToolWellModel">
        <s:ToolWell x:Name="toolWell" ItemsSource="{Binding Children}"
                    s:DockManager.IsActive="{Binding IsActive}"
                    SelectedItem="{Binding SelectedItem}"
                    Caption="{Binding SelectedItem.ToolTip}"
                    CloseCommand="{Binding CloseTabCommand}"
                    TogglePinStatusCommand="{Binding TogglePinStatusCommand}"
                    FloatTabCommand="{Binding FloatTabCommand}"
                    FloatAllCommand="{Binding FloatAllCommand}"
                    DockCommand="{Binding DockCommand}">
            <su:ProxyBinding.ProxyBindings>
                <su:ProxyBindingCollection>
                    <su:ProxyBinding Source="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=TabControl}}"
                                     Target="{Binding Width, Mode=OneWayToSource}" />
                    <su:ProxyBinding Source="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=TabControl}}"
                                     Target="{Binding Height, Mode=OneWayToSource}" />
                </su:ProxyBindingCollection>
            </su:ProxyBinding.ProxyBindings>
            <TabControl.ContentTemplate>
                <DataTemplate>
                    <ContentPresenter Content="{Binding Content}" />
                </DataTemplate>
            </TabControl.ContentTemplate>
            <TabControl.ItemContainerStyle>
                <Style TargetType="s:TabWellItem" BasedOn="{StaticResource {x:Static s:ToolWell.ToolTabStyleKey}}">
                    <Setter Property="CloseCommand" Value="{Binding Parent.CloseTabCommand}" />
                    <Setter Property="TogglePinStatusCommand" Value="{Binding Parent.TogglePinStatusCommand}" />
                    <Setter Property="Header" Value="{Binding Header}" />
                    <Setter Property="ItemType" Value="{Binding Usage}" />
                </Style>
            </TabControl.ItemContainerStyle>
        </s:ToolWell>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsWindow}" Value="True">
                <Setter TargetName="toolWell" Property="HideTitleBar" Value="True" />
                <Setter TargetName="toolWell" Property="BorderThickness" Value="1,0,1,1" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="DockedToolTemplate" DataType="m:TabModel">
        <DataTemplate.Resources>
            <u:GridLengthConverter x:Key="gridLengthConverter" />
        </DataTemplate.Resources>
        <s:SplitPanel x:Name="split" SplitterThickness="3">
            <ContentPresenter x:Name="presenter" Content="{Binding}">
                <ContentPresenter.ContentTemplate>
                    <DataTemplate>
                        <s:ToolWell s:DockManager.IsActive="{Binding IsActive}"
                                    s:DockManager.IsPinned="True"
                                    CloseCommand="{Binding Parent.CloseTabCommand}"
                                    TogglePinStatusCommand="{Binding Parent.TogglePinStatusCommand}"
                                    Caption="{Binding ToolTip}">
                            <s:TabWellItem Content="{Binding Content}" />
                        </s:ToolWell>
                    </DataTemplate>
                </ContentPresenter.ContentTemplate>
            </ContentPresenter>
            <Grid Background="{x:Null}" s:SplitPanel.DisplayIndex="1" />
        </s:SplitPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding SelectedItemDock, RelativeSource={RelativeSource AncestorType=s:DockContainer}}" Value="Left">
                <Setter TargetName="split" Property="Margin" Value="0,6" />
                <Setter TargetName="split" Property="Orientation" Value="Horizontal" />
                <Setter TargetName="presenter" Property="s:SplitPanel.DisplayIndex" Value="0" />
                <Setter TargetName="presenter" Property="s:SplitPanel.DesiredSize" Value="{Binding Width, Converter={StaticResource gridLengthConverter}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding SelectedItemDock, RelativeSource={RelativeSource AncestorType=s:DockContainer}}" Value="Top">
                <Setter TargetName="split" Property="Margin" Value="6,0" />
                <Setter TargetName="split" Property="Orientation" Value="Vertical" />
                <Setter TargetName="presenter" Property="s:SplitPanel.DisplayIndex" Value="0" />
                <Setter TargetName="presenter" Property="s:SplitPanel.DesiredSize" Value="{Binding Height, Converter={StaticResource gridLengthConverter}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding SelectedItemDock, RelativeSource={RelativeSource AncestorType=s:DockContainer}}" Value="Right">
                <Setter TargetName="split" Property="Margin" Value="0,6" />
                <Setter TargetName="split" Property="Orientation" Value="Horizontal" />
                <Setter TargetName="presenter" Property="s:SplitPanel.DisplayIndex" Value="2" />
                <Setter TargetName="presenter" Property="s:SplitPanel.DesiredSize" Value="{Binding Width, Converter={StaticResource gridLengthConverter}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding SelectedItemDock, RelativeSource={RelativeSource AncestorType=s:DockContainer}}" Value="Bottom">
                <Setter TargetName="split" Property="Margin" Value="6,0" />
                <Setter TargetName="split" Property="Orientation" Value="Vertical" />
                <Setter TargetName="presenter" Property="s:SplitPanel.DisplayIndex" Value="2" />
                <Setter TargetName="presenter" Property="s:SplitPanel.DesiredSize" Value="{Binding Height, Converter={StaticResource gridLengthConverter}}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

</ResourceDictionary>